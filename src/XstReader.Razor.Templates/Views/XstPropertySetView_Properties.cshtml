@using XstReader
@using XstReader.App.Common
@using XstReader.ElementProperties
@using XstReader.Razor.Templates

@model XstPropertySet

@{
    XstPropertySet PropertySet = Model;
    XstExportOptions Options = RenderOptions.ExportOptions;

    if (!ViewData.ContainsKey("Level"))
        ViewData.Add("Level", 1);

    int level = (ViewData["Level"] as int?) ?? 0;
    if (level == 0) level = 1;

    var properties = PropertySet?.Items ?? new XstProperty[0];
    var areas = properties.Select(p => p.Tag.PropertyArea()).Distinct().OrderBy(a => a);

    foreach (var propertyTag in properties.Select(p => p.Tag))
        RenderOptions.AddUsedProperty(propertyTag);
}

@functions
{
    ViewDataDictionary GetDictionary(int innerLevel)
    {
        var dic = new ViewDataDictionary(ViewData);
        dic["Level"] = innerLevel;
        return dic;
    }

}

@* Properties *@
@* @Html.Raw($"<H{level}>Properties</H{level}>") *@
<table border='1' style='border-collapse:collapse'>
    <thead>
        <tr>
            <th>Area</th>
            <th>Name</th>
            <th>Id</th>
            <th>Value</th>
        </tr>
    </thead>
    <tbody>
    @foreach(var area in areas)
    {
        @foreach(var property in properties.Where(p => p.Area == area?.FriendlyName()))
        {
            <tr>
                <td>
                    @if(string.IsNullOrWhiteSpace(area?.FriendlyName()))
                        @("General")
                    else
                        @(area?.FriendlyName())
                </td>
                <td>
                    @if(string.IsNullOrWhiteSpace(property.HtmlDescription))
                    {
                        @(property.Name)
                    }
                    else
                    {
                        <a href="#Property_@(property.Tag.CanonicalName())">@(property.Name)</a>
                    }
                </td>
                <td>@(property.Id)</td>
                <td>
                    @if(property.Value is byte[])
                    {
                        <a href='@($"data:application/octet-stream;base64,{Convert.ToBase64String(property.Value)}")' download='@property.CanonicalName'>
                            Binary content
                        </a>
                    }
                    else
                        @(property.DisplayValue)
                </td>
            </tr>
        }
    }
    </tbody>
</table>

