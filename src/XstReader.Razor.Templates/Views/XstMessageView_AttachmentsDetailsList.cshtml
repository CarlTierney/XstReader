@using XstReader
@using XstReader.App.Common
@using XstReader.ElementProperties
@using XstReader.Razor.Templates

@model XstMessage

@{
    XstMessage Message = Model;
    XstExportOptions Options = RenderOptions.ExportOptions;

    if (!ViewData.ContainsKey("Level"))
        ViewData.Add("Level", 1);

    int level = (ViewData["Level"] as int?) ?? 0;
    if (level == 0) level = 1;

    var attachments = (Message?.Attachments?? new XstAttachment[0]).OrderBy(a=> a.IsHidden);
}

@functions
{
    ViewDataDictionary GetDictionary(int innerLevel)
    {
        var dic = new ViewDataDictionary(ViewData);
        dic["Level"] = innerLevel;
        return dic;
    }


}

@* Attachment List *@
@Html.Raw($"<H{level}>Attachments</H{level}>")
    @* @Html.Raw($"<H{level}>{recipientType}</H{level + 1}>") *@

@foreach(var attachment in attachments)
{
    <details>
        <summary>
            @if(attachment.IsFile)
                @Html.Raw("<b>File</b>: ")
            @if(attachment.IsEmail)
                @Html.Raw("<b>Email</b>: ")
            @(attachment.DisplayName?? attachment.FileName)

            @if (attachment.Size > 1000000)
                @($" ({attachment.Size / 1000000}Mb)")
            else if (attachment.Size > 1000)
                @($" ({attachment.Size / 1000}Kb)")
            else
                @($" ({attachment.Size}b)")

            @if(attachment.IsHidden)
                @Html.Raw(" <i>(Hidden)</i>")

            @if (Options.EmbedAttachmentsInFile)
            {
                string contentType = attachment.Properties[PropertyCanonicalName.PidTagAttachMimeTag]?.Value ?? "application/octet-stream";
                string href = $"data:{contentType};base64,{attachment.GetContentAsBase64()}";

                <a href="@href" download="@attachment.LongFileName"> Download </a>
            }
        </summary>
        <p>
            <a name="@(attachment.ContentId)"></a>
            @{
                Html.RenderPartial("XstPropertySetView_Properties", attachment.Properties, GetDictionary(level + 1));
             }
        </p>
    </details>
}
