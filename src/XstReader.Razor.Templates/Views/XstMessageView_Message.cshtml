@using XstReader
@using XstReader.App.Common
@using XstReader.ElementProperties
@using XstReader.Razor.Templates

@model XstMessage

@{
    XstMessage Message = Model;
    XstExportOptions Options = RenderOptions.ExportOptions;

    if (!ViewData.ContainsKey("Level"))
        ViewData.Add("Level", 1);

    int level = (ViewData["Level"] as int?) ?? 0;
    if (level == 0) level = 1;
}

@functions
{
    ViewDataDictionary GetDictionary(int innerLevel)
    {
        var dic = new ViewDataDictionary(ViewData);
        dic["Level"] = innerLevel;
        return dic;
    }

}

@* Subject *@
@Html.Raw($"<H{level}>{Message?.Subject ?? Message?.DisplayName}</H{level}>")

@* Header *@
@{
    if (Message != null && (Options?.ShowHeadersInMessages ?? false))
        Html.RenderPartial("XstMessageView_MessageHeader", Model, GetDictionary(level+1));
}

@* Body *@
@{
    Html.RenderPartial("XstMessageView_MessageBody", Model, GetDictionary(level+1));
}

<hr />

@* Details *@
@{
    if (Message != null && (Options?.ShowDetails ?? false))
    {
        @Html.Raw($"<H{level}>Details</H{level}>")

        @* Message Properties *@
        Html.RenderPartial("XstMessageView_MessageDetailsList", Message, GetDictionary(level + 1));
        
        @* Recipients *@
        Html.RenderPartial("XstMessageView_RecipientsDetailsList", Message, GetDictionary(level+1));
        
        @* Attachments *@
        Html.RenderPartial("XstMessageView_AttachmentsDetailsList", Message, GetDictionary(level+1));
    }
}
